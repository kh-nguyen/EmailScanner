@using System.Configuration
@using System.Databases.Exchange
@using System.Services.EmailStorage
@model MsgTrackingLog
@{
    var language = "en";
    var isLanguageEnglish = true;

    ViewBag.Title = Model.message_subject;
    IEnumerable<MsgTrackingLogsAttachment> attachments = ViewBag.attachments;
    IEnumerable<MsgTrackingLogsRecipientAddress> to_recipients = ViewBag.to_recipients;
    IEnumerable<MsgTrackingLogsRecipientAddress> cc_recipients = ViewBag.cc_recipients;
    IEnumerable<MsgTrackingLogsHeader> messageInternetHeaders = ViewBag.messageInternetHeaders;

    var hasBodyText = !String.IsNullOrEmpty(Model.MsgTrackingExtendedLog.message_body_text);
    var hasReferences = messageInternetHeaders != null && messageInternetHeaders.Where(x => x.FieldName == "References").Any();
    var hasReceipts = Model.MsgTrackingLogsReceipts.Any();
    var hasSpamFilterServer = !String.IsNullOrEmpty(ConfigurationManager.AppSettings["SpamAssassinServerAddress"]);

    dynamic viewModel = new {

    };
}

<div class="site-width">
    <div class="content-wrapper col-xs-12">
        <div class="exchange-message ui-tabs ui-corner-all ui-widget ui-widget-content" jq-tabs="{ active: 0 }" ng-controller="EmailMessageController"
             data-view-model="@Newtonsoft.Json.JsonConvert.SerializeObject(viewModel)">
            <ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all">
                <li class="ui-state-default ui-corner-top ui-tabs-tab ui-tab ui-tabs-active ui-state-active">
                    <a class="ui-tabs-anchor" href="#exchange-message"><i class="fa fa-envelope-o"></i>&nbsp;Message</a>
                </li>
                <li class="ui-state-default ui-corner-top ui-tabs-tab ui-tab">
                    <a class="ui-tabs-anchor" href="#message-headers"><i class="fa fa-file-text"></i>&nbsp;Headers</a>
                </li>
                @if (hasReferences) {
                    <li class="ui-state-default ui-corner-top">
                        <a class="ui-tabs-anchor" href="#message-references">
                            <i class="fa fa-commenting"></i>&nbsp;References
                            <span class='badge' ng-bind="emailReferencesCounter | number"></span>
                            <i class="fa fa-spinner fa-spin" ng-show="emailReferencesCounterLoading"></i>
                        </a>
                    </li>
                }
                @if (hasReceipts) {
                    <li class="ui-state-default ui-corner-top">
                        <a class="ui-tabs-anchor" href="#message-receipts">
                            <i class="fa fa-tags"></i>&nbsp;Receipts
                            <span class='badge' ng-bind="emailReceiptsCounter | number"></span>
                            <i class="fa fa-spinner fa-spin" ng-show="emailReceiptsCounterLoading"></i>
                        </a>
                    </li>
                }
                @if (hasSpamFilterServer) {
                    <li class="ui-state-default ui-corner-top">
                        <a class="ui-tabs-anchor" href="#message-spamscore">
                            <i class="fa fa-filter"></i>&nbsp;Spam Score
                            <span ng-class="emailSpamScoreCounter < 5 ? 'text-success' : 'text-danger'" ng-bind="emailSpamScoreCounter | number : 2"></span>
                            <i class="fa fa-spinner fa-spin" ng-show="emailSpamScoreCounterLoading"></i>
                        </a>
                    </li>
                }
            </ul>
            <div id="exchange-message" class="container-fluid ui-tabs-panel ui-widget-content">
                <div class="row">
                    <dl class="dl-horizontal">
                        <dt>From:</dt>
                        <dd>
                            <a class="email-address" title="@Model.sender_address" href="mailto:@Model.sender_address">
                                @(Model.MsgTrackingExtendedLog.sender_name ?? Model.sender_address)
                            </a>
                            @if (!String.IsNullOrEmpty(Model.MsgTrackingExtendedLog.from_address)) {
                                <span>&nbsp;on behalf of&nbsp;</span>
                                <a class="email-address" title="@Model.MsgTrackingExtendedLog.from_address" href="mailto:@Model.MsgTrackingExtendedLog.from_address">
                                    @(Model.MsgTrackingExtendedLog.from_name ?? Model.MsgTrackingExtendedLog.from_address)
                                </a>
                            }
                        </dd>

                        <dt>Sent:</dt>
                        <dd><time class="timeago">@Model.date_time</time></dd>

                        <dt>To:</dt>
                        <dd>
                            @foreach (var recipient in to_recipients) {
                                <a class="email-address" title="@recipient.recipient_address" href="mailto:@recipient.recipient_address">
                                    @(recipient.recipient_name ?? recipient.recipient_address)
                                </a>
                            }
                        </dd>

                        @if (cc_recipients.Any()) {
                            <dt>CC:</dt>
                            <dd>
                                @foreach (var recipient in cc_recipients) {
                                    <a class="email-address" title="@recipient.recipient_address" href="mailto:@recipient.recipient_address">
                                        @(recipient.recipient_name ?? recipient.recipient_address)
                                    </a>
                                }
                            </dd>
                        }

                        <dt>Subject:</dt>
                        <dd>@Model.message_subject</dd>

                        @if (attachments != null && attachments.Any()) {
                            <dt>Attachments:</dt>
                            <dd>
                                <ul class="inline-block list-unstyled">
                                    @foreach (var item in attachments) {
                                        if (EmailStorageService.isAttachmentFileAvailableForDownload(item)) {
                                            <li>
                                                <a title="Click to download" href="@Url.Action("Attachment", new { ID = item.ID })">
                                                    @item.attachment_name&nbsp;<span file-size>@((long)item.attachment_size)</span>
                                                </a>
                                            </li>
                                        }
                                        else if (item is MsgTrackingLogsAttachment) {
                                            <li><div title="Not available for download">@item.attachment_name</div></li>
                                        }
                                    }
                                </ul>
                            </dd>
                        }
                    </dl>

                    <div class="clearfix"></div>

                    @if (ViewBag.EnforedViewingEmailPrivacy ?? false) {
                        <div class="form-group bg-warning">
                            <i class="fa fa-info-circle" aria-hidden="true"></i>&nbsp;
                            <a href="@Url.Action("View", new { ID = Model.ID, EnforcePrivacy = false })">
                                Click here to download pictures. To help protect your privacy, this program prevented automatic download of some pictures in this message.
                            </a>
                        </div>
                    }

                    <div>
                        @if (Model.MsgTrackingExtendedLog.message_body_type == "HTML" && hasBodyText) {
                            <div class="ui-tabs ui-corner-all ui-widget ui-widget-content" jq-tabs="{ active: 0 }">
                                <ul class="ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all">
                                    <li class="ui-state-default ui-corner-top ui-tabs-tab ui-tab ui-tabs-active ui-state-active">
                                        <a class="ui-tabs-anchor" href="#message-html"><i class="fa fa-file-code-o"></i>&nbsp;HTML</a>
                                    </li>
@if (hasBodyText) {
                                    <li class="ui-state-default ui-corner-top ui-tabs-tab ui-tab">
                                        <a class="ui-tabs-anchor" href="#message-text"><i class="fa fa-file-text-o"></i>&nbsp;Text</a>
                                    </li>
}
                                </ul>
                                <div id="message-html" class="ui-tabs-panel ui-widget-content padding-zero">
                                    <div class="row" grandchild-iframe-resizer="{ checkOrigin: false }">
                                        <div class="col-xs-12" ng-non-bindable>
                                            @if (Model.MsgTrackingExtendedLog.message_body_type == "HTML") {
                                                <iframe frameborder="0" seamless srcdoc="@Scripts.Render("~/bundles/iframe-resizer/content-window").ToHtmlString() <base target='_blank' /> @Model.MsgTrackingExtendedLog.message_body"></iframe>
                                            }
                                            else {
                                                <pre>@Model.MsgTrackingExtendedLog.message_body</pre>
                                            }
                                        </div>
                                    </div>
                                </div>
@if (hasBodyText) {
                                <div id="message-text" class="ui-tabs-panel ui-widget-content padding-zero">
                                    <textarea autosize class="form-control">@(Model.MsgTrackingExtendedLog.message_body_text)</textarea>
                                </div>
}
                            </div>
                        }
                        else if (Model.MsgTrackingExtendedLog.message_body_type == "HTML") {
                            <hr/>
                            <div class="row" grandchild-iframe-resizer="{ checkOrigin: false }">
                                <div class="col-xs-12" ng-non-bindable>
                                    @if (Model.MsgTrackingExtendedLog.message_body_type == "HTML") {
                                        <iframe frameborder="0" seamless srcdoc="
                                            @Scripts.Render("~/bundles/iframe-resizer/content-window").ToHtmlString()
                                            @Model.MsgTrackingExtendedLog.message_body"></iframe>
                                    }
                                    else {
                                        <pre>@Model.MsgTrackingExtendedLog.message_body</pre>
                                    }
                                </div>
                            </div>
                        }
                        else {
                            <textarea autosize class="form-control">@(Model.MsgTrackingExtendedLog.message_body ?? Model.MsgTrackingExtendedLog.message_body_text)</textarea>
                        }
                    </div>
                </div>
            </div>
            <div id="message-headers" class="ui-tabs-panel ui-widget-content">
                @if (messageInternetHeaders.Any()) {
                    <div class="table-responsive">
                        <table class="table table-striped table-condensed">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Value</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in messageInternetHeaders) {
                                    <tr>
                                        <td>@item.Line</td>
                                        <th>@item.FieldName</th>
                                        <td>@item.FieldBody</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else {
                    <p>Not Available</p>
                }
            </div>
            @if (hasReferences) {
                <div id="message-references" class="ui-tabs-panel ui-widget-content">
                    <table mails-list data-counter-name="emailReferencesCounter"
                           data-url='@Url.Action("References", "Email", new { ID = Model.ID })'></table>
                </div>
            }
            @if (hasReceipts) {
                <div id="message-receipts" class="ui-tabs-panel ui-widget-content">
                    <table mails-list data-counter-name="emailReceiptsCounter"
                           data-url='@Url.Action("Receipts", "Email", new { ID = Model.ID })'></table>
                </div>
            }
            @if (hasSpamFilterServer) {
                <div id="message-spamscore" class="ui-tabs-panel ui-widget-content">
                    <table spam-score-list data-counter-name="emailSpamScoreCounter"
                           data-url='@Url.Action("SpamScore", "Email", new { ID = Model.ID })'></table>
                </div>
            }
        </div>
        <div class="clearfix"></div>
    </div>
</div>

@section externalScripts {
    @if (!isLanguageEnglish) { @Scripts.Render(String.Format("~/bundles/jqgrid.js/js/i18n/grid.locale-{0}.js", language)) }
    @Scripts.Render("~/bundles/jqgrid.js/plugins/ui.multiselect.js")
    @Scripts.Render("~/bundles/jqgrid.js")
    @if (!isLanguageEnglish) { @Scripts.Render(String.Format("~/bundles/timepicker/js/i18n/jquery-ui-timepicker-{0}.js", language)) }
    @Scripts.Render("~/bundles/timeago.js")
    @if (!isLanguageEnglish) { @Scripts.Render(String.Format("~/bundles/timeago.js/locales/jquery.timeago.{0}.js", language)) }
    @Scripts.Render("~/bundles/iframe-resizer")
}

@section scripts {
    @Scripts.Render("~/bundles/system/js")
}

@section styles {
    @Styles.Render("~/bundles/jqgrid.css/plugins/ui.multiselect.css")
    @Styles.Render("~/bundles/jqgrid.css")
    @Styles.Render("~/bundles/timepicker/css")
}